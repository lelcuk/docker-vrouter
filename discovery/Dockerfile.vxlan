# Multi-stage build for VXLAN-enabled discovery service
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod tidy && go mod download

# Copy source code
COPY . .

# Build the VXLAN manager
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o vxlan-manager ./cmd/vxlan-manager.go

# Build the discovery service
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o discovery ./cmd/main.go

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates iproute2 bridge-utils

# Create working directory
WORKDIR /root/

# Copy binaries from builder
COPY --from=builder /app/vxlan-manager .
COPY --from=builder /app/discovery .

# Create necessary directories
RUN mkdir -p /var/lib/docker-router /etc/discovery

# Make binaries executable
RUN chmod +x vxlan-manager discovery

# Default command runs the VXLAN manager
CMD ["./vxlan-manager"]